{"version":3,"sources":["node_modules/browser-pack/_prelude.js","scripts/common.src/components/lightbox/Lightbox.ts","scripts/common.src/components/lightbox/functions/getters.ts","scripts/common.src/components/lightbox/functions/handlers.ts","scripts/common.src/components/lightbox/lightbox.constants.ts","scripts/common.src/components/lightbox/lightbox.init.ts","scripts/common.src/components/lightbox/srcMap.json","scripts/common.src/main.ts"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","constants","handlers_1","getters_1","Lightbox","container","previewsList","srcMap","buttonClose","controls","_this","this","isShown","lightboxesList","querySelector","slides","currentIndex","currentSlide","currentFocused","currentFocusedIndex","amountOfSlides","childElementCount","Array","prototype","forEach","querySelectorAll","item","index","addEventListener","elementPreviewClickHandler","bind","buttonCloseClickHandler","buttonPrev","buttonNext","buttonPrevClickHandler","buttonNextClickHandler","document","documentKeyupHandler","createLightbox","previewElement","callback","previewImage","previewContent","previewSrc","wrapper","image","content","getAttribute","children","createElement","setAttribute","textContent","appendChild","createNextSlide","nextIndex","getNextIndex","createPrevSlide","prevIndex","getPrevIndex","createNextAndPrevSlides","setFocusedPreviewByIndex","classList","remove","add","switchFocusPrev","switchFocusNext","show","CLASS_LIGHTBOX_ACTIVE","CLASS_SLIDE_CURRENT","documentElement","style","overflow","hide","event","Object","defineProperty","value","current","getPrevSlide","prev","previousElementSibling","parentElement","lastElementChild","getNextSlide","next","nextElementSibling","firstElementChild","currentTarget","keyEnterClickHandler","click","keyCode","KEY_ESC","KEY_LEFT_ARROW","KEY_RIGHT_ARROW","KEY_ENTER","init","lightboxesContainer","images","Lightbox_1","default","images/preview/image1_150.jpg","images/preview/image2_150.jpg","images/preview/image3_150.jpg","images/preview/image4_150.jpg","images/preview/image5_150.jpg","images/preview/image6_150.jpg","images/preview/image7_150.jpg","images/preview/image8_150.jpg","images/preview/image9_150.jpg","images/preview/image10_150.jpg","images/preview/image11_150.jpg","images/preview/image12_150.jpg","images/preview/image13_150.jpg","images/preview/image14_150.jpg","images/preview/image15_150.jpg","images/preview/image16_150.jpg","lightbox_init_1"],"mappings":"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","file":"common.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","declare var require: any;\nvar constants = require('./lightbox.constants');\n\nimport {elementPreviewClickHandler, buttonPrevClickHandler, buttonNextClickHandler, keyEnterClickHandler, documentKeyupHandler} from './functions/handlers';\nimport {getPrevIndex, getNextIndex} from './functions/getters';\n\n\nexport default class Lightbox\n{\n    private isShown: boolean;\n\n    /**\n    * Main element\n    * @type {HTMLElement}\n    */\n    private container: HTMLElement;\n    /**\n     * Array of lightboxes\n     * @type {HTMLLIElement[]}\n     */\n    private slides: HTMLLIElement[];\n\n    private previewsList: HTMLOListElement;\n    private lightboxesList: HTMLOListElement;\n\n    private currentIndex: number;\n    private currentSlide: HTMLLIElement;\n\n    private currentFocused: HTMLLIElement;\n    private currentFocusedIndex: number;\n    private amountOfSlides: number;\n    private srcMap: any;\n\n    /**\n     * Constructor\n     * @param {HTMLElement} container - wrapper for list of lightboxes\n     * @param {HTMLOListElement} previewsList - list of previews\n     * @param {any} srcMap - config for comparison of srcs\n     */\n    public constructor(\n        container: HTMLElement,\n        previewsList: HTMLOListElement,\n        srcMap: any\n    )\n    {\n        let buttonClose: HTMLElement;\n        let controls: HTMLElement;\n\n        this.isShown = false;\n        this.container = container;\n        this.previewsList = previewsList;\n        this.lightboxesList = <HTMLOListElement>container.querySelector( 'ol' );\n        this.slides = [];\n        this.currentIndex = -1;\n        this.currentSlide = null;\n        this.currentFocused = null;\n        this.currentFocusedIndex = 0;\n        this.amountOfSlides = previewsList.childElementCount - 1;\n        this.srcMap = srcMap;\n\n        Array.prototype.forEach.call(\n            previewsList.querySelectorAll( 'li' ),\n            ( item: HTMLLIElement, index: number ) =>\n            {\n                item.addEventListener(\n                    'click',\n                    elementPreviewClickHandler.bind(\n                        this,\n                        index\n                    ),\n                    false );\n            }\n        );\n\n        buttonClose = <HTMLButtonElement>container.querySelector( 'button.close' );\n\n        if ( buttonClose )\n        {\n            buttonClose.addEventListener( 'click', this.buttonCloseClickHandler.bind( this ), false );\n        }\n\n        controls = <HTMLElement>container.querySelector( '.controls' );\n\n        if ( controls )\n        {\n            let buttonPrev: HTMLButtonElement;\n            let buttonNext: HTMLButtonElement;\n\n            buttonPrev = <HTMLButtonElement>controls.querySelector( 'button.prev' );\n\n            if ( buttonPrev )\n            {\n                buttonPrev.addEventListener( 'click', buttonPrevClickHandler.bind( this ), false );\n            }\n\n            buttonNext = <HTMLButtonElement>controls.querySelector( 'button.next' );\n\n            if ( buttonNext )\n            {\n                buttonNext.addEventListener( 'click', buttonNextClickHandler.bind( this ), false );\n            }\n        }\n\n        document.addEventListener( 'keyup', documentKeyupHandler.bind( this ) );\n    }\n\n    /**\n     * Create lightbox for current preview\n     * @param {number} index - number of creating lightbox\n     * @param {HTMLLIElement} previewElement - current preview element\n     * @param {Function} callback\n     * @returns {HTMLLIElement} - created lightbox\n     */\n    private createLightbox( index: number, previewElement: HTMLLIElement, callback?: Function ): HTMLLIElement\n    {\n        let previewImage: HTMLImageElement;\n        let previewContent: HTMLSpanElement;\n\n        let previewSrc: string;\n        var wrapper: HTMLLIElement;\n        let image: HTMLImageElement;\n        let content: HTMLSpanElement;\n\n        previewImage = <HTMLImageElement>previewElement.querySelector( 'img' );\n        previewContent = <HTMLSpanElement>previewElement.querySelector( 'span' );\n\n        previewSrc = previewImage.getAttribute( 'src' );\n        wrapper = <HTMLLIElement>this.lightboxesList.children[index];\n\n        image = <HTMLImageElement>document.createElement( 'IMG' );\n        image.setAttribute( 'src', this.srcMap[previewSrc] );\n        image.setAttribute( 'alt', '' );\n\n        content = <HTMLSpanElement>document.createElement( 'SPAN' );\n        content.textContent = previewContent.textContent;\n\n        wrapper.appendChild( image );\n        wrapper.appendChild( content );\n\n        if ( callback && typeof callback === 'function' )\n        {\n            callback( index, previewElement );\n        }\n\n        return wrapper;\n    }\n\n    /**\n     * Create next lightbox if it doesn't exist\n     * @param {number} index - number of current lightbox\n     * @returns {HTMLLIElement} - created lightbox\n     */\n    private createNextSlide( index: number ): HTMLLIElement\n    {\n        let nextIndex: number;\n\n        nextIndex = getNextIndex( index, this.amountOfSlides );\n\n        if ( !this.slides[nextIndex] )\n        {\n            this.slides[nextIndex] = this.createLightbox( nextIndex, <HTMLLIElement>this.previewsList.children[nextIndex] );\n        }\n\n        return this.slides[nextIndex];\n    }\n\n    /**\n     * Create previous lightbox if it doesn't exist\n     * @param {number} index - number of current lightbox\n     * @returns {HTMLLIElement} - created lightbox\n     */\n    private createPrevSlide( index: number ): HTMLLIElement\n    {\n        let prevIndex: number;\n\n        prevIndex = getPrevIndex( index, this.amountOfSlides );\n\n        if ( !this.slides[prevIndex] )\n        {\n            this.slides[prevIndex] = this.createLightbox( prevIndex, <HTMLLIElement>this.previewsList.children[prevIndex] );\n        }\n\n        return this.slides[prevIndex];\n    }\n\n    /**\n     * Create previous and next lightbox if they don't exist\n     * @param {number} index - number of current lightbox\n     */\n    private createNextAndPrevSlides( index: number ): void\n    {\n        this.createNextSlide( index );\n        this.createPrevSlide( index );\n    }\n\n\n    private setFocusedPreviewByIndex( index: number ): void\n    {\n        if ( this.currentFocused )\n        {\n            this.currentFocused.classList.remove( 'focused' );\n        }\n\n        this.currentFocusedIndex = index;\n        this.currentFocused = <HTMLLIElement>this.previewsList.children[this.currentFocusedIndex];\n        this.currentFocused.classList.add( 'focused' );\n    }\n\n    private switchFocusPrev(): void\n    {\n        if ( this.isShown )\n        {\n            ( buttonPrevClickHandler.bind( this ) )();\n            return;\n        }\n\n        if ( !this.currentFocused )\n        {\n            this.setFocusedPreviewByIndex( 0 );\n            return;\n        }\n\n        this.setFocusedPreviewByIndex(\n            getPrevIndex( this.currentFocusedIndex, this.amountOfSlides )\n        );\n    }\n\n    private switchFocusNext(): void\n    {\n        if ( this.isShown ) {\n            ( buttonNextClickHandler.bind( this ) )();\n            return;\n        }\n\n        if ( !this.currentFocused )\n        {\n            this.setFocusedPreviewByIndex( 0 );\n            return;\n        }\n\n        this.setFocusedPreviewByIndex(\n            getNextIndex( this.currentFocusedIndex, this.amountOfSlides )\n        );\n    }\n\n\n\n    /**\n     * Open lightbox\n     */\n    public show(): void\n    {\n        this.container.classList.add( constants.CLASS_LIGHTBOX_ACTIVE );\n\n        if ( this.currentSlide )\n        {\n            this.currentSlide.classList.add( constants.CLASS_SLIDE_CURRENT );\n        }\n\n        this.isShown = true;\n\n        document.documentElement.style.overflow = 'hidden';\n    }\n\n    /**\n     * Close lightbox\n     */\n    public hide(): void\n    {\n        this.container.classList.remove( constants.CLASS_LIGHTBOX_ACTIVE );\n\n        document.documentElement.style.overflow = '';\n\n        if ( this.currentSlide )\n        {\n            this.currentSlide.classList.remove( constants.CLASS_SLIDE_CURRENT );\n            this.currentSlide = null;\n        }\n\n        this.isShown = false;\n        this.setFocusedPreviewByIndex( this.currentIndex );\n    }\n\n    private buttonCloseClickHandler( event: Event ): void\n    {\n        this.hide()\n    }\n}\n","/**\n * Get previous index for list of previews\n * and for list of lightboxes as well\n * @param {number} current - current index\n * @param {number} amountOfSlides - amount of slides\n */\nexport function getPrevIndex( current: number, amountOfSlides: number ): number\n{\n\treturn current ? ( current - 1 ) : amountOfSlides;\n}\n\n/**\n * Get next index for list of previews\n * and for list of lightboxes as well\n * @param {number} current - current index\n * @param {number} amountOfSlides - amount of slides\n */\nexport function getNextIndex( current: number, amountOfSlides: number ): number\n{\n\treturn current === amountOfSlides ? 0 : ( current + 1 );\n}\n\n/**\n * Get previous lightbox\n * @param {HTMLLIElement} current - current lightbox\n * @returns {HTMLLIElement} - previous lightbox\n */\nexport function getPrevSlide( current: HTMLLIElement ): HTMLLIElement\n{\n\tlet prev: HTMLLIElement;\n\n\tprev = <HTMLLIElement>current.previousElementSibling;\n\n\tif( !prev )\n\t{\n\t\tprev = <HTMLLIElement>current.parentElement.lastElementChild;\n\t}\n\n\treturn prev;\n}\n\n/**\n * Get next lightbox\n * @param {HTMLLIElement} current - current lightbox\n * @returns {HTMLLIElement} - next lightbox\n */\nexport function getNextSlide( current: HTMLLIElement ): HTMLLIElement\n{\n\tlet next: HTMLLIElement;\n\n\tnext = <HTMLLIElement>current.nextElementSibling;\n\n\tif ( !next )\n\t{\n\t\tnext = <HTMLLIElement>current.parentElement.firstElementChild;\n\t}\n\n\treturn next;\n}\n","declare var require: any;\nvar constants = require('../lightbox.constants');\n\nimport {getPrevIndex, getNextIndex} from './getters';\n\n\n\n/* index - number of current preview element */\nexport function elementPreviewClickHandler( index: number, event: Event ): void\n{\n\tlet previewElement: HTMLLIElement;\n\n\tpreviewElement = <HTMLLIElement>event.currentTarget;\n\n\tif ( !this.slides[index] ) {\n\t\tthis.slides[index] = this.createLightbox( index, previewElement, this.createNextAndPrevSlides.bind(this) );\n\t}\n\n\tthis.currentSlide = this.slides[index];\n\tthis.currentIndex = index;\n\tthis.show();\n}\n\nexport function buttonPrevClickHandler( event?: Event ): void\n{\n\tlet prev: HTMLLIElement;\n\n\tprev = this.createPrevSlide( this.currentIndex );\n\n\tthis.currentSlide.classList.remove( constants.CLASS_SLIDE_CURRENT );\n\tthis.currentSlide = prev;\n\tthis.currentSlide.classList.add( constants.CLASS_SLIDE_CURRENT );\n\tthis.currentIndex = getPrevIndex( this.currentIndex, this.amountOfSlides );\n\n\t// preload\n\tthis.createPrevSlide( this.currentIndex );\n}\n\nexport function buttonNextClickHandler( event?: Event ): void\n{\n\tlet next: HTMLLIElement;\n\n\tnext = this.createNextSlide( this.currentIndex );\n\n\tthis.currentSlide.classList.remove( constants.CLASS_SLIDE_CURRENT );\n\tthis.currentSlide = next;\n\tthis.currentSlide.classList.add( constants.CLASS_SLIDE_CURRENT );\n\tthis.currentIndex = getNextIndex( this.currentIndex, this.amountOfSlides );\n\n\t// preload\n\tthis.createNextSlide( this.currentIndex );\n}\n\nexport function keyEnterClickHandler( event: KeyboardEvent ): void\n{\n\tif ( !this.isShown )\n\t{\n\t\tthis.currentFocused.click();\n\t}\n}\n\nexport function documentKeyupHandler( event: KeyboardEvent ): void\n{\n\tswitch ( event.keyCode ) {\n\t\tcase constants.KEY_ESC:\n\t\t\tthis.hide();\n\t\t\tbreak;\n\t\tcase constants.KEY_LEFT_ARROW:\n\t\t\tthis.switchFocusPrev();\n\t\t\tbreak;\n\t\tcase constants.KEY_RIGHT_ARROW:\n\t\t\tthis.switchFocusNext();\n\t\t\tbreak;\n\t\tcase constants.KEY_ENTER:\n\t\t\t( keyEnterClickHandler.bind( this, event ) )();\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n}\n","/* Classes for states */\nexport const CLASS_LIGHTBOX_ACTIVE: string = 'active';\nexport const CLASS_SLIDE_CURRENT: string = 'current';\n\n/* Key codes */\nexport const KEY_ESC: number = 27;\nexport const KEY_RIGHT_ARROW: number = 39;\nexport const KEY_LEFT_ARROW: number = 37;\nexport const KEY_ENTER: number = 13;\n","declare var require: any;\nvar srcMap = require('./srcMap');\n\nimport Lightbox from './Lightbox';\n\n\n\nexport default function init(): void\n{\n\tlet lightboxesContainer: HTMLElement;\n\tlet images: HTMLOListElement;\n\n\tlightboxesContainer = <HTMLElement>document.querySelector( '.lightboxes' );\n\timages = <HTMLOListElement>document.querySelector( '.previews' );\n\n\tnew Lightbox( lightboxesContainer, images, srcMap );\n}\n","module.exports={\"images/preview/image1_150.jpg\":\"images/image1.jpg\",\"images/preview/image2_150.jpg\":\"images/image2.jpg\",\"images/preview/image3_150.jpg\":\"images/image3.jpg\",\"images/preview/image4_150.jpg\":\"images/image4.jpg\",\"images/preview/image5_150.jpg\":\"images/image5.jpg\",\"images/preview/image6_150.jpg\":\"images/image6.jpg\",\"images/preview/image7_150.jpg\":\"images/image7.jpg\",\"images/preview/image8_150.jpg\":\"images/image8.jpg\",\"images/preview/image9_150.jpg\":\"images/image9.jpg\",\"images/preview/image10_150.jpg\":\"images/image10.jpg\",\"images/preview/image11_150.jpg\":\"images/image11.jpg\",\"images/preview/image12_150.jpg\":\"images/image12.jpg\",\"images/preview/image13_150.jpg\":\"images/image13.jpg\",\"images/preview/image14_150.jpg\":\"images/image14.jpg\",\"images/preview/image15_150.jpg\":\"images/image15.jpg\",\"images/preview/image16_150.jpg\":\"images/image16.jpg\"}\n","import lightbox from './components/lightbox/lightbox.init';\n\nlightbox();\n"]}