{"version":3,"sources":["node_modules/browser-pack/_prelude.js","scripts/common.src/components/lightbox/Lightbox.ts","scripts/common.src/components/lightbox/functions/behaviour.ts","scripts/common.src/components/lightbox/functions/createElements.ts","scripts/common.src/components/lightbox/functions/createSlides.ts","scripts/common.src/components/lightbox/functions/focus.ts","scripts/common.src/components/lightbox/functions/getters.ts","scripts/common.src/components/lightbox/functions/handlers.ts","scripts/common.src/components/lightbox/lightbox.constants.ts","scripts/common.src/components/lightbox/lightbox.init.ts","scripts/common.src/components/lightbox/srcMap.json","scripts/common.src/main.ts"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","handlers_1","focus_1","createSlides_1","createElements_1","behaviour_1","Lightbox","container","previewsList","srcMap","buttonClose","controls","_this","this","isShown","slides","currentIndex","currentSlide","currentFocused","currentFocusedIndex","amountOfSlides","childElementCount","createElements","lightboxesList","querySelector","Array","prototype","forEach","querySelectorAll","item","index","addEventListener","elementPreviewClickHandler","bind","buttonCloseClickHandler","buttonPrev","buttonNext","buttonPrevClickHandler","buttonNextClickHandler","document","documentKeyupHandler","createLightbox","previewElement","callback","createNextSlide","createPrevSlide","createNextAndPrevSlides","setFocusedPreviewByIndex","switchFocusPrev","switchFocusNext","show","hide","Object","defineProperty","value","classList","add","constants","CLASS_LIGHTBOX_ACTIVE","CLASS_SLIDE_CURRENT","documentElement","style","overflow","remove","createLightboxesContainer","mainElement","createElement","appendChild","createLightboxesWrappers","amountOfElements","wrapper","createControls","btnPrev","btnNext","btnClose","CLASS_CONTROLS","setAttribute","className","CLASSNAME_BTN_PREV","textContent","CLASSNAME_BTN_NEXT","CLASSNAME_BTN_CLOSE","amount","previewImage","previewContent","previewSrc","image","content","getAttribute","children","prevIndex","getters_1","getPrevIndex","nextIndex","getNextIndex","CLASS_PREVIEW_FOCUSED","current","getPrevSlide","prev","previousElementSibling","parentElement","lastElementChild","getNextSlide","next","nextElementSibling","firstElementChild","event","currentTarget","keyEnterClickHandler","click","keyCode","KEY_ESC","KEY_LEFT_ARROW","KEY_RIGHT_ARROW","KEY_ENTER","init","lightboxesContainer","images","Lightbox_1","default","images/preview/image1_150.jpg","images/preview/image2_150.jpg","images/preview/image3_150.jpg","images/preview/image4_150.jpg","images/preview/image5_150.jpg","images/preview/image6_150.jpg","images/preview/image7_150.jpg","images/preview/image8_150.jpg","images/preview/image9_150.jpg","images/preview/image10_150.jpg","images/preview/image11_150.jpg","images/preview/image12_150.jpg","images/preview/image13_150.jpg","images/preview/image14_150.jpg","images/preview/image15_150.jpg","images/preview/image16_150.jpg","lightbox_init_1"],"mappings":"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","file":"common.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import {elementPreviewClickHandler, buttonPrevClickHandler, buttonNextClickHandler, keyEnterClickHandler, documentKeyupHandler, buttonCloseClickHandler} from './functions/handlers';\nimport {getPrevIndex, getNextIndex} from './functions/getters';\nimport {setFocusedPreviewByIndex, switchFocusPrev, switchFocusNext} from './functions/focus';\nimport {createLightbox, createPrevSlide, createNextSlide} from './functions/createSlides';\nimport {createElements} from './functions/createElements';\nimport {show, hide} from './functions/behaviour';\n\n\n\nexport default class Lightbox\n{\n    private isShown: boolean;\n\n    /**\n    * Main element\n    * @type {HTMLElement}\n    */\n    private container: HTMLElement;\n    /**\n     * Array of lightboxes\n     * @type {HTMLLIElement[]}\n     */\n    private slides: HTMLLIElement[];\n\n    private previewsList: HTMLOListElement;\n    private lightboxesList: HTMLOListElement;\n\n    private currentIndex: number;\n    private currentSlide: HTMLLIElement;\n\n    private currentFocused: HTMLLIElement;\n    private currentFocusedIndex: number;\n    private amountOfSlides: number;\n    private srcMap: any;\n\n    /**\n     * Constructor\n     * @param {HTMLElement} container - wrapper for list of lightboxes\n     * @param {HTMLOListElement} previewsList - list of previews\n     * @param {any} srcMap - config for comparison of srcs\n     */\n    public constructor(\n        container: HTMLElement,\n        previewsList: HTMLOListElement,\n        srcMap: any\n    )\n    {\n        let buttonClose: HTMLElement;\n        let controls: HTMLElement;\n\n        this.isShown = false;\n        this.container = container;\n        this.previewsList = previewsList;\n        this.slides = [];\n        this.currentIndex = -1;\n        this.currentSlide = null;\n        this.currentFocused = null;\n        this.currentFocusedIndex = 0;\n        this.amountOfSlides = previewsList.childElementCount - 1;\n        this.srcMap = srcMap;\n\n        createElements( container, this.amountOfSlides );\n\n        this.lightboxesList = <HTMLOListElement>container.querySelector( 'ol' );\n\n        Array.prototype.forEach.call(\n            previewsList.querySelectorAll( 'li' ),\n            ( item: HTMLLIElement, index: number ) =>\n            {\n                item.addEventListener(\n                    'click',\n                    elementPreviewClickHandler.bind(\n                        this,\n                        index\n                    ),\n                    false );\n            }\n        );\n\n        buttonClose = <HTMLButtonElement>container.querySelector( 'button.close' );\n\n        if ( buttonClose )\n        {\n            buttonClose.addEventListener( 'click', buttonCloseClickHandler.bind( this ), false );\n        }\n\n        controls = <HTMLElement>container.querySelector( '.controls' );\n\n        if ( controls )\n        {\n            let buttonPrev: HTMLButtonElement;\n            let buttonNext: HTMLButtonElement;\n\n            buttonPrev = <HTMLButtonElement>controls.querySelector( 'button.prev' );\n\n            if ( buttonPrev )\n            {\n                buttonPrev.addEventListener( 'click', buttonPrevClickHandler.bind( this ), false );\n            }\n\n            buttonNext = <HTMLButtonElement>controls.querySelector( 'button.next' );\n\n            if ( buttonNext )\n            {\n                buttonNext.addEventListener( 'click', buttonNextClickHandler.bind( this ), false );\n            }\n        }\n\n        document.addEventListener( 'keyup', documentKeyupHandler.bind( this ) );\n    }\n\n\n\n    /**\n     * Create lightbox for current preview\n     * @param {number} index - number of creating lightbox\n     * @param {HTMLLIElement} previewElement - current preview element\n     * @param {Function} callback\n     * @returns {HTMLLIElement} - created lightbox\n     */\n    private createLightbox(\n        index: number,\n        previewElement: HTMLLIElement,\n        callback?: Function ): HTMLLIElement\n    {\n        return createLightbox.bind( this )( index, previewElement, callback );\n    }\n\n    /**\n     * Create next lightbox if it doesn't exist\n     * @param {number} index - number of current lightbox\n     * @returns {HTMLLIElement} - created lightbox\n     */\n    private createNextSlide( index: number ): HTMLLIElement\n    {\n        return createNextSlide.bind( this )( index );\n    }\n\n    /**\n     * Create previous lightbox if it doesn't exist\n     * @param {number} index - number of current lightbox\n     * @returns {HTMLLIElement} - created lightbox\n     */\n    private createPrevSlide( index: number ): HTMLLIElement\n    {\n        return createPrevSlide.bind( this )( index );\n    }\n\n    /**\n     * Create previous and next lightbox if they don't exist\n     * @param {number} index - number of current lightbox\n     */\n    private createNextAndPrevSlides( index: number ): void\n    {\n        this.createNextSlide( index );\n        this.createPrevSlide( index );\n    }\n\n\n\n    private setFocusedPreviewByIndex( index: number ): void\n    {\n        setFocusedPreviewByIndex.bind( this )( index );\n    }\n\n    private switchFocusPrev(): void\n    {\n        switchFocusPrev.bind( this )();\n    }\n\n    private switchFocusNext(): void\n    {\n        switchFocusNext.bind( this )();\n    }\n\n\n\n    /**\n     * Open lightbox\n     */\n    public show(): void\n    {\n        show.bind( this )();\n    }\n\n    /**\n     * Close lightbox\n     */\n    public hide(): void\n    {\n        hide.bind( this )();\n    }\n}\n","declare var require: any;\nvar constants = require('../lightbox.constants');\n\n\n\n/**\n * Open lightbox\n */\nexport function show(): void\n{\n\tthis.container.classList.add( constants.CLASS_LIGHTBOX_ACTIVE );\n\n\tif ( this.currentSlide )\n\t{\n\t\tthis.currentSlide.classList.add( constants.CLASS_SLIDE_CURRENT );\n\t}\n\n\tthis.isShown = true;\n\n\tdocument.documentElement.style.overflow = 'hidden';\n}\n\n/**\n * Close lightbox\n */\nexport function hide(): void\n{\n\tthis.container.classList.remove( constants.CLASS_LIGHTBOX_ACTIVE );\n\n\tdocument.documentElement.style.overflow = '';\n\n\tif ( this.currentSlide )\n\t{\n\t\tthis.currentSlide.classList.remove( constants.CLASS_SLIDE_CURRENT );\n\t\tthis.currentSlide = null;\n\t}\n\n\tthis.isShown = false;\n\tthis.setFocusedPreviewByIndex( this.currentIndex );\n}\n","declare var require: any;\nvar constants = require('../lightbox.constants');\n\n\n\nfunction createLightboxesContainer( mainElement: HTMLElement ): HTMLOListElement\n{\n\tlet container: HTMLOListElement;\n\n\tcontainer = <HTMLOListElement>document.createElement( 'ol' );\n\tmainElement.appendChild( container );\n\n\treturn container;\n}\n\nfunction createLightboxesWrappers(\n\tcontainer: HTMLOListElement,\n \tamountOfElements: number ): void\n{\n\tlet index: number = 0;\n\n\tfor ( index; index < amountOfElements; index++ )\n\t{\n\t\tlet wrapper: HTMLLIElement;\n\n\t\twrapper = <HTMLLIElement>document.createElement( 'li' );\n\t\tcontainer.appendChild( wrapper );\n\t}\n}\n\nfunction createControls( mainElement: HTMLElement ): void\n{\n\tlet container: HTMLElement;\n\tlet btnPrev: HTMLButtonElement;\n\tlet btnNext: HTMLButtonElement;\n\tlet btnClose: HTMLButtonElement;\n\n\tcontainer = <HTMLElement>document.createElement( 'div' );\n\tcontainer.classList.add( constants.CLASS_CONTROLS );\n\tmainElement.appendChild( container );\n\n\tbtnPrev = <HTMLButtonElement>document.createElement( 'button' );\n\tbtnPrev.setAttribute( 'type', 'button' );\n\tbtnPrev.className = constants.CLASSNAME_BTN_PREV;\n\tbtnPrev.textContent = 'Go to back';\n\tcontainer.appendChild( btnPrev );\n\n\tbtnNext = <HTMLButtonElement>document.createElement( 'button' );\n\tbtnNext.setAttribute( 'type', 'button' );\n\tbtnNext.className = constants.CLASSNAME_BTN_NEXT;\n\tbtnNext.textContent = 'Go to next';\n\tcontainer.appendChild( btnNext );\n\n\tbtnClose = <HTMLButtonElement>document.createElement( 'button' );\n\tbtnClose.setAttribute( 'type', 'button' );\n\tbtnClose.className = constants.CLASSNAME_BTN_CLOSE;\n\tbtnClose.textContent = 'Close';\n\tmainElement.appendChild( btnClose );\n}\n\nexport function createElements(  mainElement: HTMLElement, amount: number ): void\n{\n\tlet container: HTMLOListElement;\n\n\tcontainer = createLightboxesContainer( mainElement );\n\tcreateLightboxesWrappers( container, amount );\n\tcreateControls( mainElement );\n}\n","import {getPrevIndex, getNextIndex} from './getters';\n\n\n\n/**\n * Create lightbox for current preview\n * @param {number} index - number of creating lightbox\n * @param {HTMLLIElement} previewElement - current preview element\n * @param {Function} callback\n * @returns {HTMLLIElement} - created lightbox\n */\nexport function createLightbox(\n\tindex: number,\n\tpreviewElement: HTMLLIElement,\n\tcallback?: Function ): HTMLLIElement\n{\n\tlet previewImage: HTMLImageElement;\n\tlet previewContent: HTMLSpanElement;\n\n\tlet previewSrc: string;\n\tvar wrapper: HTMLLIElement;\n\tlet image: HTMLImageElement;\n\tlet content: HTMLSpanElement;\n\n\tpreviewImage = <HTMLImageElement>previewElement.querySelector( 'img' );\n\tpreviewContent = <HTMLSpanElement>previewElement.querySelector( 'span' );\n\n\tpreviewSrc = previewImage.getAttribute( 'src' );\n\twrapper = <HTMLLIElement>this.lightboxesList.children[index];\n\n\timage = <HTMLImageElement>document.createElement( 'IMG' );\n\timage.setAttribute( 'src', this.srcMap[previewSrc] );\n\timage.setAttribute( 'alt', '' );\n\n\tcontent = <HTMLSpanElement>document.createElement( 'SPAN' );\n\tcontent.textContent = previewContent.textContent;\n\n\twrapper.appendChild( image );\n\twrapper.appendChild( content );\n\n\tif ( callback && typeof callback === 'function' )\n\t{\n\t\tcallback( index, previewElement );\n\t}\n\n\treturn wrapper;\n}\n\n/**\n * Create previous lightbox if it doesn't exist\n * @param {number} index - number of current lightbox\n * @returns {HTMLLIElement} - created lightbox\n */\nexport function createPrevSlide( index: number ): HTMLLIElement\n{\n\tlet prevIndex: number;\n\n\tprevIndex = getPrevIndex( index, this.amountOfSlides );\n\n\tif ( !this.slides[prevIndex] )\n\t{\n\t\tthis.slides[prevIndex] = this.createLightbox( prevIndex, <HTMLLIElement>this.previewsList.children[prevIndex] );\n\t}\n\n\treturn this.slides[prevIndex];\n}\n\n/**\n * Create next lightbox if it doesn't exist\n * @param {number} index - number of current lightbox\n * @returns {HTMLLIElement} - created lightbox\n */\nexport function createNextSlide( index: number ): HTMLLIElement\n{\n\tlet nextIndex: number;\n\n\tnextIndex = getNextIndex( index, this.amountOfSlides );\n\n\tif ( !this.slides[nextIndex] )\n\t{\n\t\tthis.slides[nextIndex] = this.createLightbox( nextIndex, <HTMLLIElement>this.previewsList.children[nextIndex] );\n\t}\n\n\treturn this.slides[nextIndex];\n}\n","declare var require: any;\nvar constants = require('../lightbox.constants');\n\nimport {buttonPrevClickHandler, buttonNextClickHandler} from './handlers';\nimport {getPrevIndex, getNextIndex} from './getters';\n\n\n\nexport function setFocusedPreviewByIndex( index: number ): void\n{\n\tif ( this.currentFocused )\n\t{\n\t\tthis.currentFocused.classList.remove( constants.CLASS_PREVIEW_FOCUSED );\n\t}\n\n\tthis.currentFocusedIndex = index;\n\tthis.currentFocused = <HTMLLIElement>this.previewsList.children[this.currentFocusedIndex];\n\tthis.currentFocused.classList.add( constants.CLASS_PREVIEW_FOCUSED );\n}\n\nexport function switchFocusPrev(): void\n{\n\tif ( this.isShown )\n\t{\n\t\tbuttonPrevClickHandler.bind( this )();\n\t\treturn;\n\t}\n\n\tif ( !this.currentFocused )\n\t{\n\t\tthis.setFocusedPreviewByIndex( 0 );\n\t\treturn;\n\t}\n\n\tthis.setFocusedPreviewByIndex(\n\t\tgetPrevIndex( this.currentFocusedIndex, this.amountOfSlides )\n\t);\n}\n\nexport function switchFocusNext(): void\n{\n\tif ( this.isShown ) {\n\t\tbuttonNextClickHandler.bind( this )();\n\t\treturn;\n\t}\n\n\tif ( !this.currentFocused )\n\t{\n\t\tthis.setFocusedPreviewByIndex( 0 );\n\t\treturn;\n\t}\n\n\tthis.setFocusedPreviewByIndex(\n\t\tgetNextIndex( this.currentFocusedIndex, this.amountOfSlides )\n\t);\n}\n","/**\n * Get previous index for list of previews\n * and for list of lightboxes as well\n * @param {number} current - current index\n * @param {number} amountOfSlides - amount of slides\n */\nexport function getPrevIndex( current: number, amountOfSlides: number ): number\n{\n\treturn current ? ( current - 1 ) : amountOfSlides;\n}\n\n/**\n * Get next index for list of previews\n * and for list of lightboxes as well\n * @param {number} current - current index\n * @param {number} amountOfSlides - amount of slides\n */\nexport function getNextIndex( current: number, amountOfSlides: number ): number\n{\n\treturn current === amountOfSlides ? 0 : ( current + 1 );\n}\n\n/**\n * Get previous lightbox\n * @param {HTMLLIElement} current - current lightbox\n * @returns {HTMLLIElement} - previous lightbox\n */\nexport function getPrevSlide( current: HTMLLIElement ): HTMLLIElement\n{\n\tlet prev: HTMLLIElement;\n\n\tprev = <HTMLLIElement>current.previousElementSibling;\n\n\tif( !prev )\n\t{\n\t\tprev = <HTMLLIElement>current.parentElement.lastElementChild;\n\t}\n\n\treturn prev;\n}\n\n/**\n * Get next lightbox\n * @param {HTMLLIElement} current - current lightbox\n * @returns {HTMLLIElement} - next lightbox\n */\nexport function getNextSlide( current: HTMLLIElement ): HTMLLIElement\n{\n\tlet next: HTMLLIElement;\n\n\tnext = <HTMLLIElement>current.nextElementSibling;\n\n\tif ( !next )\n\t{\n\t\tnext = <HTMLLIElement>current.parentElement.firstElementChild;\n\t}\n\n\treturn next;\n}\n","declare var require: any;\nvar constants = require('../lightbox.constants');\n\nimport {getPrevIndex, getNextIndex} from './getters';\n\n\n\n/* index - number of current preview element */\nexport function elementPreviewClickHandler( index: number, event: Event ): void\n{\n\tlet previewElement: HTMLLIElement;\n\n\tpreviewElement = <HTMLLIElement>event.currentTarget;\n\n\tif ( !this.slides[index] ) {\n\t\tthis.slides[index] = this.createLightbox( index, previewElement, this.createNextAndPrevSlides.bind(this) );\n\t}\n\n\tthis.currentSlide = this.slides[index];\n\tthis.currentIndex = index;\n\tthis.show();\n}\n\nexport function buttonPrevClickHandler( event?: Event ): void\n{\n\tlet prev: HTMLLIElement;\n\n\tprev = this.createPrevSlide( this.currentIndex );\n\n\tthis.currentSlide.classList.remove( constants.CLASS_SLIDE_CURRENT );\n\tthis.currentSlide = prev;\n\tthis.currentSlide.classList.add( constants.CLASS_SLIDE_CURRENT );\n\tthis.currentIndex = getPrevIndex( this.currentIndex, this.amountOfSlides );\n\n\t// preload\n\tthis.createPrevSlide( this.currentIndex );\n}\n\nexport function buttonNextClickHandler( event?: Event ): void\n{\n\tlet next: HTMLLIElement;\n\n\tnext = this.createNextSlide( this.currentIndex );\n\n\tthis.currentSlide.classList.remove( constants.CLASS_SLIDE_CURRENT );\n\tthis.currentSlide = next;\n\tthis.currentSlide.classList.add( constants.CLASS_SLIDE_CURRENT );\n\tthis.currentIndex = getNextIndex( this.currentIndex, this.amountOfSlides );\n\n\t// preload\n\tthis.createNextSlide( this.currentIndex );\n}\n\nexport function keyEnterClickHandler( event: KeyboardEvent ): void\n{\n\tif ( !this.isShown )\n\t{\n\t\tthis.currentFocused.click();\n\t}\n}\n\nexport function documentKeyupHandler( event: KeyboardEvent ): void\n{\n\tswitch ( event.keyCode ) {\n\t\tcase constants.KEY_ESC:\n\t\t\tthis.hide();\n\t\t\tbreak;\n\t\tcase constants.KEY_LEFT_ARROW:\n\t\t\tthis.switchFocusPrev();\n\t\t\tbreak;\n\t\tcase constants.KEY_RIGHT_ARROW:\n\t\t\tthis.switchFocusNext();\n\t\t\tbreak;\n\t\tcase constants.KEY_ENTER:\n\t\t\t( keyEnterClickHandler.bind( this, event ) )();\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n}\n\nexport function buttonCloseClickHandler( event: Event ): void\n{\n\tthis.hide()\n}\n","/* Classes for states */\nexport const CLASS_LIGHTBOX_ACTIVE: string = 'active';\nexport const CLASS_SLIDE_CURRENT: string = 'current';\nexport const CLASS_PREVIEW_FOCUSED: string = 'focused';\n\nexport const CLASS_CONTROLS: string = 'controls';\nexport const CLASSNAME_BTN_PREV: string = 'btn m-link prev';\nexport const CLASSNAME_BTN_NEXT: string = 'btn m-link next';\nexport const CLASSNAME_BTN_CLOSE: string = 'btn m-link close';\n\n/* Key codes */\nexport const KEY_ESC: number = 27;\nexport const KEY_RIGHT_ARROW: number = 39;\nexport const KEY_LEFT_ARROW: number = 37;\nexport const KEY_ENTER: number = 13;\n","declare var require: any;\nvar srcMap = require('./srcMap');\n\nimport Lightbox from './Lightbox';\n\n\n\nexport default function init(): void\n{\n\tlet lightboxesContainer: HTMLElement;\n\tlet images: HTMLOListElement;\n\n\tlightboxesContainer = <HTMLElement>document.querySelector( '.lightboxes' );\n\timages = <HTMLOListElement>document.querySelector( '.previews' );\n\n\tnew Lightbox( lightboxesContainer, images, srcMap );\n}\n","module.exports={\"images/preview/image1_150.jpg\":\"images/image1.jpg\",\"images/preview/image2_150.jpg\":\"images/image2.jpg\",\"images/preview/image3_150.jpg\":\"images/image3.jpg\",\"images/preview/image4_150.jpg\":\"images/image4.jpg\",\"images/preview/image5_150.jpg\":\"images/image5.jpg\",\"images/preview/image6_150.jpg\":\"images/image6.jpg\",\"images/preview/image7_150.jpg\":\"images/image7.jpg\",\"images/preview/image8_150.jpg\":\"images/image8.jpg\",\"images/preview/image9_150.jpg\":\"images/image9.jpg\",\"images/preview/image10_150.jpg\":\"images/image10.jpg\",\"images/preview/image11_150.jpg\":\"images/image11.jpg\",\"images/preview/image12_150.jpg\":\"images/image12.jpg\",\"images/preview/image13_150.jpg\":\"images/image13.jpg\",\"images/preview/image14_150.jpg\":\"images/image14.jpg\",\"images/preview/image15_150.jpg\":\"images/image15.jpg\",\"images/preview/image16_150.jpg\":\"images/image16.jpg\"}\n","import lightbox from './components/lightbox/lightbox.init';\n\nlightbox();\n"]}