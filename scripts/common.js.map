{"version":3,"sources":["node_modules/browser-pack/_prelude.js","scripts/common.src/components/lightbox/Lightbox.ts","scripts/common.src/components/lightbox/functions/creates.ts","scripts/common.src/components/lightbox/functions/focus.ts","scripts/common.src/components/lightbox/functions/getters.ts","scripts/common.src/components/lightbox/functions/handlers.ts","scripts/common.src/components/lightbox/lightbox.constants.ts","scripts/common.src/components/lightbox/lightbox.init.ts","scripts/common.src/components/lightbox/srcMap.json","scripts/common.src/main.ts"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","constants","handlers_1","focus_1","creates_1","Lightbox","container","previewsList","srcMap","buttonClose","controls","_this","this","isShown","lightboxesList","querySelector","slides","currentIndex","currentSlide","currentFocused","currentFocusedIndex","amountOfSlides","childElementCount","Array","prototype","forEach","querySelectorAll","item","index","addEventListener","elementPreviewClickHandler","bind","buttonCloseClickHandler","buttonPrev","buttonNext","buttonPrevClickHandler","buttonNextClickHandler","document","documentKeyupHandler","createLightbox","previewElement","callback","createNextSlide","createPrevSlide","createNextAndPrevSlides","setFocusedPreviewByIndex","switchFocusPrev","switchFocusNext","show","classList","add","CLASS_LIGHTBOX_ACTIVE","CLASS_SLIDE_CURRENT","documentElement","style","overflow","hide","remove","event","Object","defineProperty","value","previewImage","previewContent","previewSrc","wrapper","image","content","getAttribute","children","createElement","setAttribute","textContent","appendChild","prevIndex","getters_1","getPrevIndex","nextIndex","getNextIndex","current","getPrevSlide","prev","previousElementSibling","parentElement","lastElementChild","getNextSlide","next","nextElementSibling","firstElementChild","currentTarget","keyEnterClickHandler","click","keyCode","KEY_ESC","KEY_LEFT_ARROW","KEY_RIGHT_ARROW","KEY_ENTER","init","lightboxesContainer","images","Lightbox_1","default","images/preview/image1_150.jpg","images/preview/image2_150.jpg","images/preview/image3_150.jpg","images/preview/image4_150.jpg","images/preview/image5_150.jpg","images/preview/image6_150.jpg","images/preview/image7_150.jpg","images/preview/image8_150.jpg","images/preview/image9_150.jpg","images/preview/image10_150.jpg","images/preview/image11_150.jpg","images/preview/image12_150.jpg","images/preview/image13_150.jpg","images/preview/image14_150.jpg","images/preview/image15_150.jpg","images/preview/image16_150.jpg","lightbox_init_1"],"mappings":"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","file":"common.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","declare var require: any;\nvar constants = require('./lightbox.constants');\n\nimport {elementPreviewClickHandler, buttonPrevClickHandler, buttonNextClickHandler, keyEnterClickHandler, documentKeyupHandler} from './functions/handlers';\nimport {getPrevIndex, getNextIndex} from './functions/getters';\nimport {setFocusedPreviewByIndex, switchFocusPrev, switchFocusNext} from './functions/focus';\nimport {createLightbox, createPrevSlide, createNextSlide} from './functions/creates';\n\n\n\nexport default class Lightbox\n{\n    private isShown: boolean;\n\n    /**\n    * Main element\n    * @type {HTMLElement}\n    */\n    private container: HTMLElement;\n    /**\n     * Array of lightboxes\n     * @type {HTMLLIElement[]}\n     */\n    private slides: HTMLLIElement[];\n\n    private previewsList: HTMLOListElement;\n    private lightboxesList: HTMLOListElement;\n\n    private currentIndex: number;\n    private currentSlide: HTMLLIElement;\n\n    private currentFocused: HTMLLIElement;\n    private currentFocusedIndex: number;\n    private amountOfSlides: number;\n    private srcMap: any;\n\n    /**\n     * Constructor\n     * @param {HTMLElement} container - wrapper for list of lightboxes\n     * @param {HTMLOListElement} previewsList - list of previews\n     * @param {any} srcMap - config for comparison of srcs\n     */\n    public constructor(\n        container: HTMLElement,\n        previewsList: HTMLOListElement,\n        srcMap: any\n    )\n    {\n        let buttonClose: HTMLElement;\n        let controls: HTMLElement;\n\n        this.isShown = false;\n        this.container = container;\n        this.previewsList = previewsList;\n        this.lightboxesList = <HTMLOListElement>container.querySelector( 'ol' );\n        this.slides = [];\n        this.currentIndex = -1;\n        this.currentSlide = null;\n        this.currentFocused = null;\n        this.currentFocusedIndex = 0;\n        this.amountOfSlides = previewsList.childElementCount - 1;\n        this.srcMap = srcMap;\n\n        Array.prototype.forEach.call(\n            previewsList.querySelectorAll( 'li' ),\n            ( item: HTMLLIElement, index: number ) =>\n            {\n                item.addEventListener(\n                    'click',\n                    elementPreviewClickHandler.bind(\n                        this,\n                        index\n                    ),\n                    false );\n            }\n        );\n\n        buttonClose = <HTMLButtonElement>container.querySelector( 'button.close' );\n\n        if ( buttonClose )\n        {\n            buttonClose.addEventListener( 'click', this.buttonCloseClickHandler.bind( this ), false );\n        }\n\n        controls = <HTMLElement>container.querySelector( '.controls' );\n\n        if ( controls )\n        {\n            let buttonPrev: HTMLButtonElement;\n            let buttonNext: HTMLButtonElement;\n\n            buttonPrev = <HTMLButtonElement>controls.querySelector( 'button.prev' );\n\n            if ( buttonPrev )\n            {\n                buttonPrev.addEventListener( 'click', buttonPrevClickHandler.bind( this ), false );\n            }\n\n            buttonNext = <HTMLButtonElement>controls.querySelector( 'button.next' );\n\n            if ( buttonNext )\n            {\n                buttonNext.addEventListener( 'click', buttonNextClickHandler.bind( this ), false );\n            }\n        }\n\n        document.addEventListener( 'keyup', documentKeyupHandler.bind( this ) );\n    }\n\n    /**\n     * Create lightbox for current preview\n     * @param {number} index - number of creating lightbox\n     * @param {HTMLLIElement} previewElement - current preview element\n     * @param {Function} callback\n     * @returns {HTMLLIElement} - created lightbox\n     */\n    private createLightbox(\n        index: number,\n        previewElement: HTMLLIElement,\n        callback?: Function ): HTMLLIElement\n    {\n        return createLightbox.bind( this )( index, previewElement, callback );\n    }\n\n    /**\n     * Create next lightbox if it doesn't exist\n     * @param {number} index - number of current lightbox\n     * @returns {HTMLLIElement} - created lightbox\n     */\n    private createNextSlide( index: number ): HTMLLIElement\n    {\n        return createNextSlide.bind( this )( index );\n    }\n\n    /**\n     * Create previous lightbox if it doesn't exist\n     * @param {number} index - number of current lightbox\n     * @returns {HTMLLIElement} - created lightbox\n     */\n    private createPrevSlide( index: number ): HTMLLIElement\n    {\n        return createPrevSlide.bind( this )( index );\n    }\n\n    /**\n     * Create previous and next lightbox if they don't exist\n     * @param {number} index - number of current lightbox\n     */\n    private createNextAndPrevSlides( index: number ): void\n    {\n        this.createNextSlide( index );\n        this.createPrevSlide( index );\n    }\n\n\n    private setFocusedPreviewByIndex( index: number ): void\n    {\n        setFocusedPreviewByIndex.bind( this )( index );\n    }\n\n    private switchFocusPrev(): void\n    {\n        switchFocusPrev.bind( this )();\n    }\n\n    private switchFocusNext(): void\n    {\n        switchFocusNext.bind( this )();\n    }\n\n\n\n    /**\n     * Open lightbox\n     */\n    public show(): void\n    {\n        this.container.classList.add( constants.CLASS_LIGHTBOX_ACTIVE );\n\n        if ( this.currentSlide )\n        {\n            this.currentSlide.classList.add( constants.CLASS_SLIDE_CURRENT );\n        }\n\n        this.isShown = true;\n\n        document.documentElement.style.overflow = 'hidden';\n    }\n\n    /**\n     * Close lightbox\n     */\n    public hide(): void\n    {\n        this.container.classList.remove( constants.CLASS_LIGHTBOX_ACTIVE );\n\n        document.documentElement.style.overflow = '';\n\n        if ( this.currentSlide )\n        {\n            this.currentSlide.classList.remove( constants.CLASS_SLIDE_CURRENT );\n            this.currentSlide = null;\n        }\n\n        this.isShown = false;\n        this.setFocusedPreviewByIndex( this.currentIndex );\n    }\n\n    private buttonCloseClickHandler( event: Event ): void\n    {\n        this.hide()\n    }\n}\n","import {getPrevIndex, getNextIndex} from './getters';\n\n\n\n/**\n * Create lightbox for current preview\n * @param {number} index - number of creating lightbox\n * @param {HTMLLIElement} previewElement - current preview element\n * @param {Function} callback\n * @returns {HTMLLIElement} - created lightbox\n */\nexport function createLightbox(\n\tindex: number,\n\tpreviewElement: HTMLLIElement,\n\tcallback?: Function ): HTMLLIElement\n{\n\tlet previewImage: HTMLImageElement;\n\tlet previewContent: HTMLSpanElement;\n\n\tlet previewSrc: string;\n\tvar wrapper: HTMLLIElement;\n\tlet image: HTMLImageElement;\n\tlet content: HTMLSpanElement;\n\n\tpreviewImage = <HTMLImageElement>previewElement.querySelector( 'img' );\n\tpreviewContent = <HTMLSpanElement>previewElement.querySelector( 'span' );\n\n\tpreviewSrc = previewImage.getAttribute( 'src' );\n\twrapper = <HTMLLIElement>this.lightboxesList.children[index];\n\n\timage = <HTMLImageElement>document.createElement( 'IMG' );\n\timage.setAttribute( 'src', this.srcMap[previewSrc] );\n\timage.setAttribute( 'alt', '' );\n\n\tcontent = <HTMLSpanElement>document.createElement( 'SPAN' );\n\tcontent.textContent = previewContent.textContent;\n\n\twrapper.appendChild( image );\n\twrapper.appendChild( content );\n\n\tif ( callback && typeof callback === 'function' )\n\t{\n\t\tcallback( index, previewElement );\n\t}\n\n\treturn wrapper;\n}\n\n/**\n * Create previous lightbox if it doesn't exist\n * @param {number} index - number of current lightbox\n * @returns {HTMLLIElement} - created lightbox\n */\nexport function createPrevSlide( index: number ): HTMLLIElement\n{\n\tlet prevIndex: number;\n\n\tprevIndex = getPrevIndex( index, this.amountOfSlides );\n\n\tif ( !this.slides[prevIndex] )\n\t{\n\t\tthis.slides[prevIndex] = this.createLightbox( prevIndex, <HTMLLIElement>this.previewsList.children[prevIndex] );\n\t}\n\n\treturn this.slides[prevIndex];\n}\n\n/**\n * Create next lightbox if it doesn't exist\n * @param {number} index - number of current lightbox\n * @returns {HTMLLIElement} - created lightbox\n */\nexport function createNextSlide( index: number ): HTMLLIElement\n{\n\tlet nextIndex: number;\n\n\tnextIndex = getNextIndex( index, this.amountOfSlides );\n\n\tif ( !this.slides[nextIndex] )\n\t{\n\t\tthis.slides[nextIndex] = this.createLightbox( nextIndex, <HTMLLIElement>this.previewsList.children[nextIndex] );\n\t}\n\n\treturn this.slides[nextIndex];\n}\n","import {buttonPrevClickHandler, buttonNextClickHandler} from './handlers';\nimport {getPrevIndex, getNextIndex} from './getters';\n\n\n\nexport function setFocusedPreviewByIndex( index: number ): void\n{\n\tif ( this.currentFocused )\n\t{\n\t\tthis.currentFocused.classList.remove( 'focused' );\n\t}\n\n\tthis.currentFocusedIndex = index;\n\tthis.currentFocused = <HTMLLIElement>this.previewsList.children[this.currentFocusedIndex];\n\tthis.currentFocused.classList.add( 'focused' );\n}\n\nexport function switchFocusPrev(): void\n{\n\tif ( this.isShown )\n\t{\n\t\tbuttonPrevClickHandler.bind( this )();\n\t\treturn;\n\t}\n\n\tif ( !this.currentFocused )\n\t{\n\t\tthis.setFocusedPreviewByIndex( 0 );\n\t\treturn;\n\t}\n\n\tthis.setFocusedPreviewByIndex(\n\t\tgetPrevIndex( this.currentFocusedIndex, this.amountOfSlides )\n\t);\n}\n\nexport function switchFocusNext(): void\n{\n\tif ( this.isShown ) {\n\t\tbuttonNextClickHandler.bind( this )();\n\t\treturn;\n\t}\n\n\tif ( !this.currentFocused )\n\t{\n\t\tthis.setFocusedPreviewByIndex( 0 );\n\t\treturn;\n\t}\n\n\tthis.setFocusedPreviewByIndex(\n\t\tgetNextIndex( this.currentFocusedIndex, this.amountOfSlides )\n\t);\n}\n","/**\n * Get previous index for list of previews\n * and for list of lightboxes as well\n * @param {number} current - current index\n * @param {number} amountOfSlides - amount of slides\n */\nexport function getPrevIndex( current: number, amountOfSlides: number ): number\n{\n\treturn current ? ( current - 1 ) : amountOfSlides;\n}\n\n/**\n * Get next index for list of previews\n * and for list of lightboxes as well\n * @param {number} current - current index\n * @param {number} amountOfSlides - amount of slides\n */\nexport function getNextIndex( current: number, amountOfSlides: number ): number\n{\n\treturn current === amountOfSlides ? 0 : ( current + 1 );\n}\n\n/**\n * Get previous lightbox\n * @param {HTMLLIElement} current - current lightbox\n * @returns {HTMLLIElement} - previous lightbox\n */\nexport function getPrevSlide( current: HTMLLIElement ): HTMLLIElement\n{\n\tlet prev: HTMLLIElement;\n\n\tprev = <HTMLLIElement>current.previousElementSibling;\n\n\tif( !prev )\n\t{\n\t\tprev = <HTMLLIElement>current.parentElement.lastElementChild;\n\t}\n\n\treturn prev;\n}\n\n/**\n * Get next lightbox\n * @param {HTMLLIElement} current - current lightbox\n * @returns {HTMLLIElement} - next lightbox\n */\nexport function getNextSlide( current: HTMLLIElement ): HTMLLIElement\n{\n\tlet next: HTMLLIElement;\n\n\tnext = <HTMLLIElement>current.nextElementSibling;\n\n\tif ( !next )\n\t{\n\t\tnext = <HTMLLIElement>current.parentElement.firstElementChild;\n\t}\n\n\treturn next;\n}\n","declare var require: any;\nvar constants = require('../lightbox.constants');\n\nimport {getPrevIndex, getNextIndex} from './getters';\n\n\n\n/* index - number of current preview element */\nexport function elementPreviewClickHandler( index: number, event: Event ): void\n{\n\tlet previewElement: HTMLLIElement;\n\n\tpreviewElement = <HTMLLIElement>event.currentTarget;\n\n\tif ( !this.slides[index] ) {\n\t\tthis.slides[index] = this.createLightbox( index, previewElement, this.createNextAndPrevSlides.bind(this) );\n\t}\n\n\tthis.currentSlide = this.slides[index];\n\tthis.currentIndex = index;\n\tthis.show();\n}\n\nexport function buttonPrevClickHandler( event?: Event ): void\n{\n\tlet prev: HTMLLIElement;\n\n\tprev = this.createPrevSlide( this.currentIndex );\n\n\tthis.currentSlide.classList.remove( constants.CLASS_SLIDE_CURRENT );\n\tthis.currentSlide = prev;\n\tthis.currentSlide.classList.add( constants.CLASS_SLIDE_CURRENT );\n\tthis.currentIndex = getPrevIndex( this.currentIndex, this.amountOfSlides );\n\n\t// preload\n\tthis.createPrevSlide( this.currentIndex );\n}\n\nexport function buttonNextClickHandler( event?: Event ): void\n{\n\tlet next: HTMLLIElement;\n\n\tnext = this.createNextSlide( this.currentIndex );\n\n\tthis.currentSlide.classList.remove( constants.CLASS_SLIDE_CURRENT );\n\tthis.currentSlide = next;\n\tthis.currentSlide.classList.add( constants.CLASS_SLIDE_CURRENT );\n\tthis.currentIndex = getNextIndex( this.currentIndex, this.amountOfSlides );\n\n\t// preload\n\tthis.createNextSlide( this.currentIndex );\n}\n\nexport function keyEnterClickHandler( event: KeyboardEvent ): void\n{\n\tif ( !this.isShown )\n\t{\n\t\tthis.currentFocused.click();\n\t}\n}\n\nexport function documentKeyupHandler( event: KeyboardEvent ): void\n{\n\tswitch ( event.keyCode ) {\n\t\tcase constants.KEY_ESC:\n\t\t\tthis.hide();\n\t\t\tbreak;\n\t\tcase constants.KEY_LEFT_ARROW:\n\t\t\tthis.switchFocusPrev();\n\t\t\tbreak;\n\t\tcase constants.KEY_RIGHT_ARROW:\n\t\t\tthis.switchFocusNext();\n\t\t\tbreak;\n\t\tcase constants.KEY_ENTER:\n\t\t\t( keyEnterClickHandler.bind( this, event ) )();\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n}\n","/* Classes for states */\nexport const CLASS_LIGHTBOX_ACTIVE: string = 'active';\nexport const CLASS_SLIDE_CURRENT: string = 'current';\n\n/* Key codes */\nexport const KEY_ESC: number = 27;\nexport const KEY_RIGHT_ARROW: number = 39;\nexport const KEY_LEFT_ARROW: number = 37;\nexport const KEY_ENTER: number = 13;\n","declare var require: any;\nvar srcMap = require('./srcMap');\n\nimport Lightbox from './Lightbox';\n\n\n\nexport default function init(): void\n{\n\tlet lightboxesContainer: HTMLElement;\n\tlet images: HTMLOListElement;\n\n\tlightboxesContainer = <HTMLElement>document.querySelector( '.lightboxes' );\n\timages = <HTMLOListElement>document.querySelector( '.previews' );\n\n\tnew Lightbox( lightboxesContainer, images, srcMap );\n}\n","module.exports={\"images/preview/image1_150.jpg\":\"images/image1.jpg\",\"images/preview/image2_150.jpg\":\"images/image2.jpg\",\"images/preview/image3_150.jpg\":\"images/image3.jpg\",\"images/preview/image4_150.jpg\":\"images/image4.jpg\",\"images/preview/image5_150.jpg\":\"images/image5.jpg\",\"images/preview/image6_150.jpg\":\"images/image6.jpg\",\"images/preview/image7_150.jpg\":\"images/image7.jpg\",\"images/preview/image8_150.jpg\":\"images/image8.jpg\",\"images/preview/image9_150.jpg\":\"images/image9.jpg\",\"images/preview/image10_150.jpg\":\"images/image10.jpg\",\"images/preview/image11_150.jpg\":\"images/image11.jpg\",\"images/preview/image12_150.jpg\":\"images/image12.jpg\",\"images/preview/image13_150.jpg\":\"images/image13.jpg\",\"images/preview/image14_150.jpg\":\"images/image14.jpg\",\"images/preview/image15_150.jpg\":\"images/image15.jpg\",\"images/preview/image16_150.jpg\":\"images/image16.jpg\"}\n","import lightbox from './components/lightbox/lightbox.init';\n\nlightbox();\n"]}